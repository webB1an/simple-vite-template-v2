import{o as a,c as o,a as s,b as l}from"./index-ac043553.js";const p={class:"prose prose-sm m-auto text-left markdown-body"},e=s("div",{class:"text-center my-6"},[s("div",{"i-carbon:aperture":"",class:"text-4xl m-auto"}),s("h3",{class:"mt-2"},"Markdown Example")],-1),t=l(`<ul><li>Markdown 使用方法参考 <a href="https://webb1an.github.io/blog/front-end/vue3.html#vue3-%E6%94%AF%E6%8C%81-markdown" target="_blank" rel="noopener">博客</a>，Markdown 是基于 <a href="https://github.com/antfu" target="_blank" rel="noopener">@antfu</a> 的 <a href="https://github.com/antfu/vite-plugin-vue-markdown" target="_blank" rel="noopener">vite-plugin-vue-markdown</a> 项目。</li><li>项目架构基于 <a href="https://github.com/antfu/vitesse" target="_blank" rel="noopener">Vitesse</a></li><li>项目集成了： <ul><li><a href="https://github.com/sxzz/unplugin-vue-macros" target="_blank" rel="noopener">unplugin-vue-macros</a> - 一个 Vue3 的宏插件，可以让你在 Vue3 中使用 Vue2 的写法，比如 <code>defineOptions</code>、<code>defineProps</code>、<code>defineEmits</code> 等等。</li><li><a href="https://github.com/antfu/unplugin-auto-import" target="_blank" rel="noopener">unplugin-auto-import</a> - 一个自动导 api 的插件，可以让你在使用 api 的时候不用手动导入，比如 <code>import { ref } from &#39;vue&#39;</code>，只需要在使用的时候 <code>ref</code> 就可以了。</li><li><a href="https://github.com/antfu/unplugin-vue-components" target="_blank" rel="noopener">unplugin-vue-components</a> - 一个自动导入组件的插件，可以让你在使用组件的时候不用手动导入，比如 <code>import { Button } from &#39;ant-design-vue&#39;</code>，只需要在使用的时候 <code>Button</code> 就可以了。</li></ul></li></ul><h4>代码块展示</h4><pre class="shiki vitesse-dark" style="background-color:#121212;" tabindex="0"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">hello world</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-dark" style="background-color:#121212;" tabindex="0"><code><span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">bubbleSort</span><span style="color:#666666;">(</span><span style="color:#BD976A;">arr</span><span style="color:#666666;">: </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">[]):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA9A7;">number</span><span style="color:#666666;">[]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">len</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">arr</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">i</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">i</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&lt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">len</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">i</span><span style="color:#CB7676;">++</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">j</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">j</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&lt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">len</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">i</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">j</span><span style="color:#CB7676;">++</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">arr</span><span style="color:#666666;">[</span><span style="color:#BD976A;">j</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">arr</span><span style="color:#666666;">[</span><span style="color:#BD976A;">j</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">])</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#666666;">[</span><span style="color:#BD976A;">arr</span><span style="color:#666666;">[</span><span style="color:#BD976A;">j</span><span style="color:#666666;">],</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">arr</span><span style="color:#666666;">[</span><span style="color:#BD976A;">j</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">]]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#BD976A;">arr</span><span style="color:#666666;">[</span><span style="color:#BD976A;">j</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">],</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">arr</span><span style="color:#666666;">[</span><span style="color:#BD976A;">j</span><span style="color:#666666;">]]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// ES6 解构赋值交换两个元素的值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">arr</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span></code></pre>`,4),r=[e,t],A={__name:"index",setup(c,{expose:n}){return n({frontmatter:{}}),(D,E)=>(a(),o("div",p,r))}};export{A as default};
